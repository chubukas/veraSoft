import { createAsyncThunk, createEntityAdapter, createSlice } from "@reduxjs/toolkit";
import axios from "axios";

// import { AsyncHeader } from "../../Data/AsyncHeader";


// CREATE AN ADAPTER 
const UserAdapter = createEntityAdapter();

// INITIALIZE THE STATE WITH THE ADAPTER
const initialState = UserAdapter.getInitialState({
  status: "idle",
});


// CREATE ASYNC FUNCTION WITH THRUC THAT WILL FETCH DATE FROM THE API
export const fetchUser = createAsyncThunk("user/fetchUser", async () => {
  // const response = await AsyncHeader();
  const response = await axios.get("https://evoteam-verasoft.github.io/data/summary.json");
  // The value we return becomes the `fulfilled` action payload
  return Array(response.data)

})


export const UserSlide = createSlice({
  name: 'user',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: {
    [fetchUser.fulfilled as any]:
      (state: any, payload: any) => {
        UserAdapter.setAll(state, payload)
        state.status = "completed"
      },
    [fetchUser.rejected as any]: (state: any) => {
      state.status = "rejected"
    }

  }


})


export const {
  selectAll: SelectUser,
} = UserAdapter.getSelectors((state: any) => state.user)

export default UserSlide.reducer